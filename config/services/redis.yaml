# Redis Cache Service Configuration
# High-performance in-memory cache and message broker

service_name: "redis"
display_name: "Redis Cache"
category: "core_infrastructure"
description: "High-performance in-memory data store for caching and message queuing"
required: false
default_enabled: true

# Docker configuration
docker:
  image: "redis:7-alpine"
  container_name: "redis"
  restart: "unless-stopped"
  
  ports:
    - "6379:6379"
  
  volumes:
    - "redis-data:/data"
    - "redis-config:/etc/redis"
  
  networks:
    - "traefik"
  
  environment:
    - "TZ=${TIMEZONE}"
  
  command: "redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}"

# Configuration options
configuration:
  authentication:
    password:
      type: "password"
      required: true
      description: "Redis authentication password"
  
  persistence:
    enabled:
      type: "boolean"
      default: true
      description: "Enable data persistence (AOF)"
    
    save_interval:
      type: "choice"
      choices: ["900 1", "300 10", "60 10000", "disabled"]
      default: "900 1"
      description: "Snapshot save interval"
  
  memory:
    max_memory:
      type: "string"
      default: "256mb"
      description: "Maximum memory usage"
    
    eviction_policy:
      type: "choice"
      choices: ["allkeys-lru", "volatile-lru", "allkeys-random", "volatile-random", "volatile-ttl", "noeviction"]
      default: "allkeys-lru"
      description: "Memory eviction policy when max memory reached"
  
  performance:
    max_clients:
      type: "integer"
      default: 10000
      description: "Maximum number of client connections"
    
    tcp_backlog:
      type: "integer"
      default: 511
      description: "TCP connection backlog size"

# Health check
healthcheck:
  test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
  interval: "30s"
  timeout: "10s"
  retries: 3

# Dependencies
dependencies: []

# Storage volumes
volumes:
  - name: "redis-data"
    description: "Redis data persistence"
  - name: "redis-config"
    description: "Redis configuration files"

# Environment variables
environment_variables:
  - name: "REDIS_PASSWORD"
    description: "Redis authentication password"
    generated: true
    type: "password"

# Configuration files
config_files:
  redis.conf:
    path: "/etc/redis/redis.conf"
    content: |
      # Redis configuration generated by Home Lab
      bind 0.0.0.0
      port 6379
      requirepass ${REDIS_PASSWORD}
      
      # Persistence
      appendonly yes
      appendfsync everysec
      
      # Memory management
      maxmemory ${MAX_MEMORY}
      maxmemory-policy ${EVICTION_POLICY}
      
      # Performance
      tcp-backlog ${TCP_BACKLOG}
      maxclients ${MAX_CLIENTS}
      
      # Logging
      loglevel notice
      logfile ""
      
      # Security
      protected-mode yes