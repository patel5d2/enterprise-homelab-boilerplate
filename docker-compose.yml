version: '3.8'
services:
  traefik:
    image: traefik:v3.1
    container_name: traefik
    restart: unless-stopped
    command:
    - --api.dashboard=true
    - --api.insecure=true
    - --providers.docker=true
    - --providers.docker.exposedbydefault=false
    - --entrypoints.web.address=:80
    - --entrypoints.websecure.address=:443
    - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
    - --certificatesresolvers.letsencrypt.acme.email=admin@homelab.local
    - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
    ports:
    - 80:80
    - 443:443
    - 8080:8080
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    - letsencrypt:/letsencrypt
    labels:
    - traefik.enable=true
    - traefik.http.routers.traefik.rule=Host(`traefik.homelab.local`)
    - traefik.http.routers.traefik.tls.certresolver=letsencrypt
    networks:
    - traefik
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    - --storage.tsdb.path=/prometheus
    - --storage.tsdb.retention.time=30d
    - --web.console.libraries=/etc/prometheus/console_libraries
    - --web.console.templates=/etc/prometheus/consoles
    - --web.enable-lifecycle
    volumes:
    - ./prometheus.yml:/etc/prometheus/prometheus.yml
    - prometheus-data:/prometheus
    labels:
    - traefik.enable=true
    - traefik.http.routers.prometheus.rule=Host(`prometheus.homelab.local`)
    - traefik.http.routers.prometheus.tls.certresolver=letsencrypt
    - traefik.http.services.prometheus.loadbalancer.server.port=9090
    networks:
    - traefik
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
    - GF_SECURITY_ADMIN_PASSWORD=admin
    - GF_SERVER_DOMAIN=grafana.homelab.local
    - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s/
    volumes:
    - grafana-data:/var/lib/grafana
    labels:
    - traefik.enable=true
    - traefik.http.routers.grafana.rule=Host(`grafana.homelab.local`)
    - traefik.http.routers.grafana.tls.certresolver=letsencrypt
    - traefik.http.services.grafana.loadbalancer.server.port=3000
    depends_on:
    - prometheus
    networks:
    - traefik
  postgres:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    environment:
    - POSTGRES_DB=homelab
    - POSTGRES_USER=homelab
    - POSTGRES_PASSWORD=homelab123
    volumes:
    - postgres-data:/var/lib/postgresql/data
    networks:
    - traefik
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    volumes:
    - redis-data:/data
    networks:
    - traefik
  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    restart: unless-stopped
    environment:
    - TZ=${TZ:-UTC}
    - WEBPASSWORD=admin123
    - DNSMASQ_LISTENING=all
    volumes:
    - pihole-data:/etc/pihole
    - pihole-dnsmasq:/etc/dnsmasq.d
    ports:
    - 53:53/tcp
    - 53:53/udp
    labels:
    - traefik.enable=true
    - traefik.http.routers.pihole.rule=Host(`pihole.homelab.local`)
    - traefik.http.routers.pihole.tls.certresolver=letsencrypt
    - traefik.http.services.pihole.loadbalancer.server.port=80
    networks:
    - traefik
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    environment:
    - DOMAIN=https://vault.homelab.local
    - SIGNUPS_ALLOWED=false
    - ADMIN_TOKEN=${VAULTWARDEN_ADMIN_TOKEN}
    volumes:
    - vaultwarden-data:/data
    labels:
    - traefik.enable=true
    - traefik.http.routers.vaultwarden.rule=Host(`vault.homelab.local`)
    - traefik.http.routers.vaultwarden.tls.certresolver=letsencrypt
    - traefik.http.services.vaultwarden.loadbalancer.server.port=80
    networks:
    - traefik
  glance:
    image: glanceapp/glance:latest
    container_name: glance
    restart: unless-stopped
    volumes:
    - ./glance.yml:/app/glance.yml
    - glance-data:/app/data
    labels:
    - traefik.enable=true
    - traefik.http.routers.glance.rule=Host(`dashboard.homelab.local`)
    - traefik.http.routers.glance.tls.certresolver=letsencrypt
    - traefik.http.services.glance.loadbalancer.server.port=8080
    networks:
    - traefik
  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    restart: unless-stopped
    volumes:
    - uptime-kuma-data:/app/data
    labels:
    - traefik.enable=true
    - traefik.http.routers.uptime-kuma.rule=Host(`uptime.homelab.local`)
    - traefik.http.routers.uptime-kuma.tls.certresolver=letsencrypt
    - traefik.http.services.uptime-kuma.loadbalancer.server.port=3001
    networks:
    - traefik
networks:
  traefik:
    driver: bridge
volumes:
  letsencrypt: null
  prometheus-data: null
  grafana-data: null
  postgres-data: null
  redis-data: null
  pihole-data: null
  pihole-dnsmasq: null
  vaultwarden-data: null
  glance-data: null
  uptime-kuma-data: null
